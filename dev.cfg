[buildout]
extends =
    versions-dev.cfg

allow-picked-versions = true

parts +=
    test
#    testme
    testpst
    testcore
#    coverageme
    coveragepst
    coveragecore
    omelette
    report
    robot
    ipzope
    upgrade

always-checkout = force
auto-checkout +=
    collective.compoundcriterion
#    collective.contact.plonegroup
#    collective.documentgenerator
#    collective.eeafaceted.batchactions
    collective.eeafaceted.collectionwidget
    collective.eeafaceted.dashboard
    collective.eeafaceted.z3ctable
#    collective.task
    communesplone.layout
#    dexterity.localroles
#    dexterity.localrolesfield
#    imio.actionspanel
    imio.dashboard
    imio.helpers
    imio.migrator
    imio.pyutils
    plonetheme.imioapps

[instance1]
#use the instance1 eggs to extends the base eggs defined in [buildout]
recipe = plone.recipe.zope2instance
debug-mode = on
verbose-security = on
environment-vars +=
    ENABLE_PRINTING_MAILHOST True
    ENV DEV

eggs +=
    ${debug:eggs}
    Products.DocFinderTab
#    Products.PDBDebugMode
    Products.PrintingMailHost
    collective.wfautodoc
    plone.versioncheck
    wildcard.fixpersistentutilities

zcml +=
    ${debug:zcml}

zope-conf-additional +=
  publisher-profile-file ${buildout:directory}/profile.dat

# create bin/test command
[test]
recipe = zc.recipe.testrunner
defaults = ['--auto-color', '--auto-progress']
#extra-paths = ${buildout:directory}/parts/omelette
#include-site-packages = true
eggs =
    Pillow
    Plone
    imio.dashboard [test]
    imio.project.core [test]
    imio.project.pst [test]
    collective.documentgenerator [test]
    collective.excelexport [test]
    collective.contact.core [test]
    collective.contact.plonegroup [test]
    collective.task [test]
    collective.MockMailHost
    ipdb
environment = testenv

[testme]
<= test
initialization =
    sys.argv = sys.argv[:] + ['-s', 'imio.project.pst', '-s', 'imio.project.core']

[testpst]
<= test
initialization =
    sys.argv = sys.argv[:] + ['-s', 'imio.project.pst']

[testcore]
<= test
initialization =
    sys.argv = sys.argv[:] + ['-s', 'imio.project.core']

[testenv]
zope_i18n_compile_mo_files = true
ENV = DEV

[coverageme]
recipe = zc.recipe.egg
eggs = coverage
scripts = coverage=coverageme
initialization =
    include = '--source=${buildout:directory}/src/imio.project.pst/src/imio/project/pst,' \
              '${buildout:directory}/src/imio.project.core/src/imio/project/core'
    sys.argv = sys.argv[:] + ['run', '-a', include, 'bin/test', '-s', 'imio.project.core', '-s', 'imio.project.pst']

[coveragepst]
recipe = zc.recipe.egg
eggs = coverage
scripts = coverage=coveragepst
initialization =
    include = '--source=${buildout:directory}/src/imio.project.pst/src/imio/project/pst,'
    sys.argv = sys.argv[:] + ['run', include, 'bin/testpst',]
#    sys.argv = sys.argv[:] + ['run', '-a', include, 'bin/testpst',]

[coveragecore]
recipe = zc.recipe.egg
eggs = coverage
scripts = coverage=coveragecore
initialization =
    include = '--source=${buildout:directory}/src/imio.project.core/src/imio/project/core,'
    sys.argv = sys.argv[:] + ['run', include, 'bin/testcore',]
#    sys.argv = sys.argv[:] + ['run', '-a', include, 'bin/testcore',]

[report]
recipe = zc.recipe.egg
eggs = coverage
scripts = coverage=report
initialization =
    sys.argv = sys.argv[:] + ['html', '-i']

[robot]
recipe = zc.recipe.egg
eggs =
    Pillow
    ${test:eggs}
    plone.app.robotframework [debug]
    robotframework-selenium2screenshots
initialization =
    import os
    os.environ['ENV'] = 'DEV'
    os.environ['zope_i18n_compile_mo_files'] = 'true'
    os.environ['PYTHON_UNO'] = '${port:python-uno}'

[omelette]
recipe = collective.recipe.omelette
eggs =
    ${instance1:eggs}
    ${test:eggs}

[ipzope]
# An IPython Shell for interactive use with Zope running.
#
# It requires the `ipy_profile_zope.py` configuration script.
# Get this from git@github.com:collective/dotipython.git
# and put it in your profile directory. Depending on your setup,
# this may be at
# `$HOME/.ipython/profile_zope/startup`,
# `$HOME/.config/ipython/profile_zope/startup` (Ubuntu 12.04), or see
# http://ipython.org/ipython-doc/dev/config/overview.html#configuration-file-location
# for more details.
#
recipe = zc.recipe.egg
eggs =
    ipython
    ${instance1:eggs}
initialization =
    import sys, os
    os.environ["INSTANCE_HOME"] = "${instance1:location}"
    sys.argv[1:1] = "--profile zope2".split()
scripts = ipython=ipzope
