[buildout]
extends = 
    base.cfg
    versions-dev.cfg
allow-picked-versions = true

parts +=
    test
    testme
    coverage
    report

always-checkout = force
auto-checkout +=
    collective.contact.core
    collective.contact.plonegroup
    communesplone.layout

[sources]
collective.contact.core = git ${remotes:collective}/collective.contact.core.git pushurl=${remotes:collective_push}/collective.contact.core.git rev=7d30d1e9d85e3e6c935090167ad1cbe73b90be22

[instance1]
#use the instance1 eggs to extends the base eggs defined in [buildout]
recipe = plone.recipe.zope2instance
debug-mode = on
verbose-security = on
environment-vars +=
    ENABLE_PRINTING_MAILHOST True
    IS_DEV_ENV True

eggs +=
    Products.Clouseau
    Products.DocFinderTab
#       Products.PDBDebugMode
    Products.PrintingMailHost
    collective.contact.plonegroup
    ipdb
    iw.debug
    plone.reload
zcml +=
    iw.debug

# create bin/test command
[test]
recipe = zc.recipe.testrunner
defaults = ['--auto-color', '--auto-progress']
#extra-paths = ${buildout:directory}/parts/omelette
#include-site-packages = true
eggs =
    Pillow
    Plone
    collective.contact.core [test]
    collective.contact.plonegroup [test]
    collective.MockMailHost
    ipdb
    plone.app.testing
environment = testenv

[testme]
<= test
initialization =
    sys.argv = sys.argv[:] + ['-s', 'imio.dms.mail']

[testenv]
zope_i18n_compile_mo_files = true

[coverage]
recipe = zc.recipe.egg
eggs = coverage
initialization =
    include = '--source=${buildout:directory}/src/imio.dms.mail/imio/dms/mail,' \
              '${buildout:directory}/src/collective.contact.plonegroup/src/collective/contact/plonegroup,'
    sys.argv = sys.argv[:] + ['run', include, 'bin/test', '-s', 'collective.contact.plonegroup',]

[report]
recipe = zc.recipe.egg
eggs = coverage
scripts = coverage=report
initialization =
    sys.argv = sys.argv[:] + ['html', '-i']
