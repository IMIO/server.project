[buildout]
extensions =
    mr.developer
show-picked-versions = true
allow-picked-versions = true

parts =
    productdistros
    svnproducts
    omelette
    instance1
    zopepy
#    ipzope
    repozo

# If you want to get the last versions of eggs, you have to comment the line "versions-prod.cfg"
extends = 
    http://dist.plone.org/release/4.3.2/versions.cfg
    versions-base.cfg

versions=versions

# Add additional egg download sources here. dist.plone.org contains archives
# of Plone packages.
find-links =
    http://dist.plone.org/release/4.3.2
    http://dist.plone.org/thirdparty
    http://download.zope.org/ppix/
    http://download.zope.org/distribution/
    http://effbot.org/downloads
    http://b.pypi.python.org
    http://c.pypi.python.org
    http://d.pypi.python.org

# Add additional eggs here
# elementtree is required by Plone
eggs =
    Plone
    Pillow
#    PyXML
#- hotfix -#
#    Products.PloneHotfix20130618

# Reference any eggs you are developing here, one per line
# e.g.: develop = src/my.package
develop =

# Only take stable eggs
#prefer-final = true

# Always unzip eggs
unzip = true

always-checkout = false
auto-checkout +=
    appy
    collective.contact.plonegroup
    collective.contact.widget
    collective.z3cform.datagridfield
#    collective.z3cform.rolefield
    communesplone.layout
    imio.migrator
    imio.project.core
    imio.project.pst
    plonetheme.imioapps

[remotes]
plone = git://github.com/plone
plone_push = git@github.com:plone
collective = git://github.com/collective
collective_push = git@github.com:collective
zopefoundation = git://github.com/zopefoundation
zopefoundation_push = git@github.com:zopefoundation

[sources]
appy = svn http://svn.communesplone.org/svn/communesplone/appy/tags/0.8.3
collective.contact.plonegroup = git ${remotes:collective}/collective.contact.plonegroup.git pushurl=${remotes:collective_push}/collective.contact.plonegroup.git
collective.contact.widget = git ${remotes:collective}/collective.contact.widget.git pushurl=${remotes:collective_push}/collective.contact.widget.git rev=378aa0ddb1933725405ef9707af4db7e24a08d0d
# collective.z3cform.datagridfield > 0.14
collective.z3cform.datagridfield = git ${remotes:collective}/collective.z3cform.datagridfield.git pushurl=${remotes:collective_push}/collective.z3cform.datagridfield.git
#collective.z3cform.rolefield = git ${remotes:collective}/collective.z3cform.rolefield.git pushurl=${remotes:collective_push}/collective.z3cform.rolefield.git
communesplone.layout = svn http://svn.communesplone.org/svn/communesplone/communesplone.layout/trunk
imio.migrator = svn http://svn.communesplone.org/svn/communesplone/imio.migrator/tags/1.0
imio.project.core = svn http://svn.communesplone.org/svn/communesplone/imio.project.core/tags/0.2
imio.project.pst = svn http://svn.communesplone.org/svn/communesplone/imio.project.pst/tags/0.2
plonetheme.imioapps = svn http://svn.communesplone.org/svn/communesplone/plonetheme.imioapps/trunk

# Use this section to download additional old-style products.
# List any number of URLs for product tarballs under URLs (separate
# with whitespace, or break over several lines, with subsequent lines
# indented). If any archives contain several products inside a top-level
# directory, list the archive file name (i.e. the last part of the URL,
# normally with a .tar.gz suffix or similar) under 'nested-packages'.
# If any archives extract to a product directory with a version suffix, list
# the archive name under 'version-suffix-packages'.

[productdistros]
recipe = plone.recipe.distros
urls = 
#    file://${buildout:directory}/ZPsycopgDA_2013.tgz
nested-packages = 
version-suffix-packages = 

[svnproducts]
recipe = infrae.subversion
urls =
    http://svn.communesplone.org/svn/communesplone/CPUtils/trunk CPUtils

[omelette]
recipe = collective.recipe.omelette
eggs = ${instance1:eggs}
products = ${instance1:products}
#packages = ${zope2:location}/lib/python ./

[instance1]
recipe = plone.recipe.zope2instance
#effective-user = zope
user = admin:admin
http-address = 8081
zserver-threads = 4
debug-mode = off
verbose-security = off
zope-conf-additional =
  <product-config five.z2monitor>
     bind 127.0.0.1:8888
  </product-config>
  extensions ${buildout:directory}/Extensions
  %define FILESTORAGE ${buildout:directory}/var/filestorage
  %define BLOBSTORAGE ${buildout:directory}/var/blobstorage
  %include ${buildout:directory}/zope_add.conf
environment-vars =
  PYTHON_EGG_CACHE ${buildout:directory}/python-eggs
  zope_i18n_compile_mo_files true

# If you want Zope to know about any additional eggs, list them here.
# This should include any development eggs you listed in develop-eggs above,
# e.g. eggs = ${buildout:eggs} my.package
eggs =
    ${buildout:eggs}
    collective.ckeditor
    collective.externaleditor
    imio.project.pst
    iw.debug
    plonetheme.imioapps
    five.z2monitor
    Products.ZNagios
    zc.z3monitor

# If you want to register ZCML slugs for any packages, list them here.
# e.g. zcml = my.package my.other.package
zcml =
    plonetheme.imioapps
    five.z2monitor
    Products.ZNagios-zcmonitor
    zc.z3monitor

products =
    ${buildout:directory}/products
    ${productdistros:location}
    ${svnproducts:location}

[zopepy]
recipe = zc.recipe.egg
eggs = ${instance1:eggs}
interpreter = zopepy
scripts = zopepy

[ipzope]
recipe = zc.recipe.egg
eggs = ipython ${instance1:eggs}
initialization =
    import sys, os
    os.environ["INSTANCE_HOME"] = "${instance1:location}"
    sys.argv[1:1] = "--profile zope2".split()
scripts = ipython=ipzope

[repozo]
recipe = zc.recipe.egg
eggs = ZODB3
scripts = repozo
